name: Build and Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tutorize-backend:latest
          no-cache: true 
          platforms: linux/amd64 

      - name: Verify image was pushed
        run: |
          echo "Verifying image was pushed to Docker Hub..."
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/tutorize-backend:latest
          docker images ${{ secrets.DOCKERHUB_USERNAME }}/tutorize-backend:latest

      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Starting deployment..."

            # Clean up disk space first
            echo "Cleaning up disk space..."
            docker system prune -a -f

            # Check available space
            echo "Available disk space:"
            df -h

            echo "Pulling latest image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/tutorize-backend:latest

            echo "Checking new image date:"
            docker images ${{ secrets.DOCKERHUB_USERNAME }}/tutorize-backend:latest

            # Stop and remove the old container
            echo "Stopping old container..."
            docker stop tutorize-backend-container || true
            docker rm tutorize-backend-container || true

            # Run database migrations
            echo "Running database migrations..."
            docker run --rm \
              --env-file /home/ec2-user/.env \
              ${{ secrets.DOCKERHUB_USERNAME }}/tutorize-backend:latest \
              sh -c "npx prisma db push"

            # Run the new container
            echo "Starting new container..."
            docker run \
              -d \
              --name tutorize-backend-container \
              --restart always \
              --env-file /home/ec2-user/.env \
              -p 127.0.0.1:3000:3000 \
              ${{ secrets.DOCKERHUB_USERNAME }}/tutorize-backend:latest

            echo "Deployment successful!"
            echo "Container status:"
            docker ps | grep tutorize-backend-container

            # Final cleanup
            docker image prune -f

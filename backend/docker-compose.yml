version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tutor-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tutor_platform_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tutor-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: tutor-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tutor-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: tutor-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/tutor_platform_db?schema=public
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CORS_ORIGIN: http://localhost:3000,http://localhost:5173
      THROTTLE_TTL: 60000
      THROTTLE_LIMIT: 100
    volumes:
      - app_uploads:/app/uploads
    networks:
      - tutor-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prisma Studio (optional, for database management)
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: tutor-prisma-studio
    restart: unless-stopped
    ports:
      - "5555:5555"
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/tutor_platform_db?schema=public
    command: npx prisma studio --browser none --port 5555 --hostname 0.0.0.0
    networks:
      - tutor-network
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local

networks:
  tutor-network:
    driver: bridge 
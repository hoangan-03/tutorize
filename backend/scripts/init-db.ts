import { PrismaClient } from '@prisma/client';
import * as bcrypt from 'bcrypt';
import {
  Subject,
  DocumentType as DocType,
  ExerciseStatus,
  QuizStatus,
  IeltsSkill,
  IeltsLevel,
  QuestionType,
  IeltsQuestionType,
  Role,
} from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  console.log('üöÄ Starting database initialization...');

  // Clean up existing data
  console.log('üßπ Cleaning up existing data...');
  await prisma.$transaction([
    prisma.quizAnswer.deleteMany(),
    prisma.quizSubmission.deleteMany(),
    prisma.question.deleteMany(),
    prisma.quiz.deleteMany(),
    prisma.exerciseSubmission.deleteMany(),
    prisma.exerciseAttachment.deleteMany(),
    prisma.exercise.deleteMany(),
    prisma.documentAccess.deleteMany(),
    prisma.document.deleteMany(),
    prisma.ieltsAnswer.deleteMany(),
    prisma.ieltsSubmission.deleteMany(),
    prisma.ieltsQuestion.deleteMany(),
    prisma.ieltsSection.deleteMany(),
    prisma.ieltsTest.deleteMany(),
    prisma.writingAssessment.deleteMany(),
    prisma.notification.deleteMany(),
    prisma.systemLog.deleteMany(),
    prisma.systemConfig.deleteMany(),
    prisma.userProfile.deleteMany(),
    prisma.user.deleteMany(),
  ]);

  // Create sample teacher
  console.log('üë®‚Äçüè´ Creating sample teacher...');
  const teacherPassword = await bcrypt.hash('Teacher123!', 12);
  const teacher = await prisma.user.create({
    data: {
      email: 'teacher@gmail.com',
      password: teacherPassword,
      name: 'An Nguyen',
      role: Role.TEACHER,
      subject: Subject.MATH,
      isActive: true,
      isVerified: true,
      profile: {
        create: {
          firstName: 'An',
          lastName: 'Nguyen',
          phone: '0932669566',
          school: 'PTNK',
          preferences: {
            language: 'vi',
            theme: 'light',
            notifications: true,
            emailNotifications: true,
          },
        },
      },
    },
  });

  // Create sample students
  console.log('üë®‚Äçüéì Creating sample students...');
  const studentPassword = await bcrypt.hash('Student123!', 12);
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  const student1 = await prisma.user.create({
    data: {
      email: 'student1@gmail.com',
      password: studentPassword,
      name: 'Nguyen Thuy Thu Khanh',
      role: Role.STUDENT,
      grade: 10,
      isActive: true,
      isVerified: true,
      profile: {
        create: {
          firstName: 'Thu Khanh',
          lastName: 'Nguyen Thuy',
          phone: '0987654321',
          school: 'PTNK',
          preferences: {
            language: 'vi',
            theme: 'light',
            notifications: true,
            emailNotifications: true,
          },
        },
      },
    },
  });

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  const student2 = await prisma.user.create({
    data: {
      email: 'student2@gmail.com',
      password: studentPassword,
      name: 'Nguyen Thu Bao Khanh',
      role: Role.STUDENT,
      grade: 8,
      isActive: true,
      isVerified: true,
      profile: {
        create: {
          firstName: 'Khanh',
          lastName: 'Nguyen Thu Bao',
          phone: '0912345678',
          school: 'THCS Le Anh Xuan',
          preferences: {
            language: 'vi',
            theme: 'dark',
            notifications: true,
            emailNotifications: false,
          },
        },
      },
    },
  });

  // Create sample quiz
  console.log('üìù Creating sample quiz...');
  const quiz1 = await prisma.quiz.create({
    data: {
      title: 'Ph∆∞∆°ng tr√¨nh b·∫≠c hai',
      description: 'B√†i ki·ªÉm tra v·ªÅ ph∆∞∆°ng tr√¨nh b·∫≠c hai v√† ·ª©ng d·ª•ng',
      subject: Subject.MATH,
      grade: 9,
      timeLimit: 1,
      deadline: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),
      status: QuizStatus.ACTIVE,
      createdBy: teacher.id,
      isPublic: true,
      tags: ['math', 'equation', 'algebra'],
      instructions: 'L√†m b√†i c·∫©n th·∫≠n',
      questions: {
        create: [
          {
            question: 'Ph∆∞∆°ng tr√¨nh x¬≤ - 5x + 6 = 0 c√≥ nghi·ªám l√†:',
            type: QuestionType.MULTIPLE_CHOICE,
            options: [
              'x = 2, x = 3',
              'x = 1, x = 6',
              'x = -2, x = -3',
              'V√¥ nghi·ªám',
            ],
            correctAnswer: 'x = 2, x = 3',
            points: 2,
            explanation:
              'S·ª≠ d·ª•ng c√¥ng th·ª©c nghi·ªám ho·∫∑c ph√¢n t√≠ch: (x-2)(x-3) = 0',
            order: 1,
          },
          {
            question:
              'Discriminant c·ªßa ph∆∞∆°ng tr√¨nh ax¬≤ + bx + c = 0 ƒë∆∞·ª£c t√≠nh b·∫±ng c√¥ng th·ª©c:',
            type: QuestionType.MULTIPLE_CHOICE,
            options: ['b¬≤ - 4ac', 'b¬≤ + 4ac', '4ac - b¬≤', 'a¬≤ - 4bc'],
            correctAnswer: 'b¬≤ - 4ac',
            points: 1,
            explanation: 'Discriminant Œî = b¬≤ - 4ac',
            order: 2,
          },
          {
            question:
              'N·∫øu discriminant < 0 th√¨ ph∆∞∆°ng tr√¨nh b·∫≠c hai c√≥ bao nhi√™u nghi·ªám th·ª±c?',
            type: QuestionType.FILL_BLANK,
            correctAnswer: '0',
            points: 1,
            explanation: 'Khi Œî < 0, ph∆∞∆°ng tr√¨nh kh√¥ng c√≥ nghi·ªám th·ª±c',
            order: 3,
          },
        ],
      },
    },
  });

  const quiz2 = await prisma.quiz.create({
    data: {
      title: 'H√†m s·ªë b·∫≠c hai',
      description: 'B√†i ki·ªÉm tra v·ªÅ h√†m s·ªë b·∫≠c hai v√† ·ª©ng d·ª•ng',
      subject: Subject.MATH,
      grade: 8,
      timeLimit: 2,
      deadline: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000),
      status: QuizStatus.ACTIVE,
      createdBy: teacher.id,
      isPublic: true,
      tags: ['math', 'function', 'algebra'],
      instructions: 'ƒê·ªçc k·ªπ ƒë·ªÅ tr∆∞·ªõc khi tr·∫£ l·ªùi.',
      questions: {
        create: [
          {
            question: 'H√†m s·ªë y = x¬≤ - 4x + 3 c√≥ ƒë·ªânh l√†:',
            type: QuestionType.MULTIPLE_CHOICE,
            options: ['(2, 1)', '(1, 2)', '(2, -1)', '(1, -2)'],
            correctAnswer: '(2, 1)',
            points: 1,
            explanation:
              'ƒê·ªânh c·ªßa h√†m s·ªë b·∫≠c hai y = ax¬≤ + bx + c l√† (x, y) = (-b/2a, -Œî/4a)',
            order: 1,
          },
          // True/False Question
          {
            question: 'H√†m s·ªë b·∫≠c nh·∫•t y = ax + b c√≥ ƒë·ªì th·ªã l√† m·ªôt ƒë∆∞·ªùng th·∫≥ng',
            type: QuestionType.TRUE_FALSE,
            correctAnswer: 'True',
            points: 1,
            explanation: 'H√†m s·ªë b·∫≠c nh·∫•t c√≥ ƒë·ªì th·ªã l√† m·ªôt ƒë∆∞·ªùng th·∫≥ng',
            order: 2,
          },
          // Fill in the blank
          {
            question:
              'H√†m s·ªë b·∫≠c nh·∫•t y = 3x + 2 c·∫Øt tr·ª•c tung t·∫°i ƒëi·ªÉm c√≥ tung ƒë·ªô b·∫±ng',
            type: QuestionType.FILL_BLANK,
            correctAnswer: '2',
            points: 1,
            explanation:
              'H√†m s·ªë b·∫≠c nh·∫•t y = 3x + 2 c·∫Øt tr·ª•c tung t·∫°i ƒëi·ªÉm c√≥ tung ƒë·ªô b·∫±ng 2 khi x = 0',
            order: 3,
          },
        ],
      },
    },
  });

  await prisma.quiz.update({
    where: { id: quiz1?.id },
    data: { totalQuestions: 3 },
  });

  await prisma.quiz.update({
    where: { id: quiz2?.id },
    data: { totalQuestions: 3 },
  });

  // Create sample exercise
  console.log('üìö Creating sample exercise...');
  await prisma.exercise.create({
    data: {
      name: 'B√†i t·∫≠p v·ªÅ H√†m s·ªë b·∫≠c hai',
      description: 'Gi·∫£i c√°c b√†i t·∫≠p v·ªÅ ƒë·ªì th·ªã v√† t√≠nh ch·∫•t h√†m s·ªë b·∫≠c hai',
      subject: Subject.MATH,
      grade: 10,
      deadline: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000),
      content: `
        <h2>B√†i t·∫≠p v·ªÅ H√†m s·ªë b·∫≠c hai</h2>
        <p><strong>B√†i 1:</strong> Cho h√†m s·ªë y = x¬≤ - 4x + 3</p>
        <ol>
          <li>T√¨m t·ªça ƒë·ªô ƒë·ªânh c·ªßa parabol</li>
          <li>X√°c ƒë·ªãnh tr·ª•c ƒë·ªëi x·ª©ng</li>
          <li>T√¨m giao ƒëi·ªÉm v·ªõi c√°c tr·ª•c t·ªça ƒë·ªô</li>
          <li>V·∫Ω ƒë·ªì th·ªã h√†m s·ªë</li>
        </ol>
        
        <p><strong>B√†i 2:</strong> T√¨m gi√° tr·ªã c·ªßa m ƒë·ªÉ ph∆∞∆°ng tr√¨nh x¬≤ - 2x + m = 0 c√≥:</p>
        <ol>
          <li>Hai nghi·ªám ph√¢n bi·ªát</li>
          <li>Nghi·ªám k√©p</li>
          <li>V√¥ nghi·ªám</li>
        </ol>
      `,
      createdBy: teacher.id,
      status: ExerciseStatus.ACTIVE,
      maxScore: 100,
      allowLateSubmission: true,
      isPublic: true,
    },
  });

  await prisma.exercise.create({
    data: {
      name: 'B√†i t·∫≠p v·ªÅ H√†m s·ªë b·∫≠c hai',
      description: 'Gi·∫£i c√°c b√†i t·∫≠p v·ªÅ ƒë·ªì th·ªã v√† t√≠nh ch·∫•t h√†m s·ªë b·∫≠c hai',
      subject: Subject.MATH,
      grade: 12,
      deadline: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000),
      content: `
        <h2>B√†i t·∫≠p v·ªÅ H√†m s·ªë b·∫≠c hai</h2>
      `,
      createdBy: teacher.id,
      status: ExerciseStatus.ACTIVE,
      maxScore: 100,
      allowLateSubmission: true,
      isPublic: true,
    },
  });

  // Create sample document
  console.log('üìÑ Creating sample document...');
  await prisma.document.create({
    data: {
      title: 'C√¥ng th·ª©c To√°n h·ªçc c∆° b·∫£n',
      description:
        'T·ªïng h·ª£p c√°c c√¥ng th·ª©c to√°n h·ªçc quan tr·ªçng cho ch∆∞∆°ng tr√¨nh THPT',
      subject: Subject.MATH,
      grade: 10,
      type: DocType.PDF,
      fileUrl: '/documents/math-formulas.pdf',
      fileSize: 2048000, // 2MB
      uploadedBy: teacher.id,
      isPublic: true,
      isApproved: true,
      approvedBy: teacher.id,
      approvedAt: new Date(),
      tags: ['c√¥ng th·ª©c', 'to√°n h·ªçc', 'THPT'],
    },
  });

  // Create sample IELTS test
  console.log('üéØ Creating sample IELTS test...');
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  const ieltsTest = await prisma.ieltsTest.create({
    data: {
      title: 'IELTS Reading Practice Test 1',
      description: 'B√†i t·∫≠p luy·ªán ƒë·ªçc IELTS v·ªõi 3 passages',
      skill: IeltsSkill.READING,
      level: IeltsLevel.INTERMEDIATE,
      timeLimit: 60,
      createdBy: teacher.id,
      sections: {
        create: [
          {
            title: 'Passage 1: The History of Coffee',
            instructions: 'Read the passage and answer questions 1-5',
            timeLimit: 20,
            order: 1,
            passageText: `
              Coffee is one of the world's most popular beverages. The story of coffee begins in Ethiopia, 
              where legend says a goat herder named Kaldi discovered coffee when he noticed his goats 
              became energetic after eating certain berries...
            `,
            questions: {
              create: [
                {
                  question: 'According to the passage, who discovered coffee?',
                  type: IeltsQuestionType.MULTIPLE_CHOICE,
                  options: ['A farmer', 'Kaldi', 'A merchant', 'A traveler'],
                  correctAnswers: ['Kaldi'],
                  points: 1,
                  explanation:
                    "The passage states 'legend says a goat herder named Kaldi discovered coffee...'",
                  order: 1,
                },
                {
                  question: 'Coffee was first discovered in _______.',
                  type: IeltsQuestionType.COMPLETION,
                  correctAnswers: ['Ethiopia'],
                  points: 1,
                  explanation:
                    "The passage begins 'The story of coffee begins in Ethiopia...'",
                  order: 2,
                },
              ],
            },
          },
        ],
      },
    },
  });

  // Create system config
  console.log('‚öôÔ∏è Creating system configuration...');
  await prisma.systemConfig.createMany({
    data: [
      {
        key: 'PLATFORM_NAME',
        value: 'Tutor Platform',
        description: 'T√™n n·ªÅn t·∫£ng',
      },
      {
        key: 'MAX_FILE_SIZE',
        value: '10485760',
        description: 'K√≠ch th∆∞·ªõc file t·ªëi ƒëa (bytes)',
      },
      {
        key: 'ALLOWED_FILE_TYPES',
        value: 'pdf,doc,docx,jpg,jpeg,png,mp3,mp4',
        description: 'C√°c lo·∫°i file ƒë∆∞·ª£c ph√©p upload',
      },
    ],
  });

  console.log('‚úÖ Database initialization completed successfully!');
  console.log(`
    üìä Created:
    - 1 Teacher (teacher@gmail.com / Teacher123@)
    - 2 Students (student1@gmail.com, student2@gmail.com / Student123@)
    - 2 Sample quiz with each 3 questions
    - 2 Sample exercise
    - 1 Sample document
    - 1 Sample IELTS test
    - System configuration
  `);
}

main()
  .catch((e) => {
    console.error('‚ùå Error during database initialization:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
